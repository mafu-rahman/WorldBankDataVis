package login;

public class xyz {

	public static void main(String[] args) {
		int x = 50000000000;
		System.out.println(getS(x));
		System.out.println(getSS(x));
		System.out.println(getS(x) == getSS(x));

	}
	
	public static int getSS(int n) {
		int a=1;
		int b=2;
		int c = 2*b+3*a;
		if(n>3) {
			for(int i=3; i<n; i++) {
				a=b;
				b=c;
				c=2*b+3*a;
			}
		}
		return c;
	}
		
	public static int getS(int n) {
		
		if(n==1) {
			return 1;
		}
		else if(n==2) {
			return 2;
		}
		
		int[][] ApowerN = matrixPower(n-2);
		int Tn = (2 * ApowerN[0][0]) + ApowerN[1][0];
		
		
		return Tn;
	}
	
	public static int[][] matrixPower(int n){
		int[][] A = {{2, 1}, 
				{3, 0}};
		
		int[][] P = new int[2][2];
		int[][] C = new int[2][2];
		
		if(n==1) {
			return A;
		}
		
		else {
			P = matrixPower(n/2);
			if(n%2==0) {
				C[0][0] = P[0][0]*P[0][0] + P[0][1]*P[1][0];
				C[0][1] = P[0][0]*P[0][1] + P[0][1]*P[1][1];
				C[1][0] = P[1][0]*P[0][0] + P[1][1]*P[1][0];
				C[1][1] = P[1][0]*P[0][1] + P[1][1]*P[1][1];
				
				return C;
			}
			else {
				C[0][0] = P[0][0]*P[0][0] + P[0][1]*P[1][0];
				C[0][1] = P[0][0]*P[0][1] + P[0][1]*P[1][1];
				C[1][0] = P[1][0]*P[0][0] + P[1][1]*P[1][0];
				C[1][1] = P[1][0]*P[0][1] + P[1][1]*P[1][1];
				
				P[0][0] = C[0][0]*A[0][0] + C[0][1]*A[1][0];
				P[0][1] = C[0][0]*A[0][1] + C[0][1]*A[1][1];
				P[1][0] = C[1][0]*A[0][0] + C[1][1]*A[1][0];
				P[1][1] = C[1][0]*A[0][1] + C[1][1]*A[1][1];
				
				return P;
			}
		}
	}
}
